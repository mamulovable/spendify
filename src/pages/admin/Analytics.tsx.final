import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { DatePickerWithRange } from '@/components/ui/date-range-picker';
import { Button } from '@/components/ui/button';
import { Skeleton } from '@/components/ui/skeleton';
import { Badge } from '@/components/ui/badge';
import { CalendarIcon, TrendingUp, TrendingDown, Users, FileText, DollarSign, Activity } from 'lucide-react';
import { useAdmin } from '@/contexts/AdminContext';
import { useAdminAnalytics, type AnalyticsTimeframe } from '@/hooks/useAdminAnalytics';
import { addDays, format, sub } from 'date-fns';
import { DateRange } from 'react-day-picker';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import {
  AreaChart,
  Area,
  LineChart,
  Line,
  BarChart as RechartsBarChart,
  Bar,
  PieChart,
  Pie,
  Cell,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip as RechartsTooltip,
  Legend,
  ResponsiveContainer
} from 'recharts';
import { formatCurrency } from '@/lib/utils';

export default function Analytics() {
  const [dateRange, setDateRange] = useState<DateRange>({  
    from: sub(new Date(), { days: 30 }),
    to: new Date(),
  });
  
  const timeframe: AnalyticsTimeframe = {
    start_date: dateRange.from ? format(dateRange.from, 'yyyy-MM-dd') : sub(new Date(), { days: 30 }).toISOString().split('T')[0],
    end_date: dateRange.to ? format(dateRange.to, 'yyyy-MM-dd') : new Date().toISOString().split('T')[0]
  };
  
  const {
    userGrowth,
    documentProcessing,
    revenue,
    featureUsage,
    trialConversion,
    retention,
    loading,
    error,
    refresh
  } = useAdminAnalytics(timeframe);
  
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-3xl font-bold tracking-tight">Analytics Dashboard</h2>
          <p className="text-muted-foreground">
            Explore user analytics, revenue metrics, and platform performance
          </p>
        </div>
        <DatePickerWithRange
          dateRange={dateRange}
          onDateRangeChange={setDateRange}
          className="justify-self-end"
        />
      </div>

      <Tabs defaultValue="system">
        <TabsList className="grid w-full md:w-auto grid-cols-4 md:grid-cols-5">
          <TabsTrigger value="system">Overview</TabsTrigger>
          <TabsTrigger value="users">User Growth</TabsTrigger>
          <TabsTrigger value="retention">Retention</TabsTrigger>
          <TabsTrigger value="financial">Revenue</TabsTrigger>
          <TabsTrigger value="performance">Performance</TabsTrigger>
        </TabsList>
      </Tabs>
      
      <Button
        onClick={refresh}
        variant="outline"
        className="mt-4"
      >
        Refresh Data
      </Button>
    </div>
  );
}
